package com.spring.security.poc.entity;
// Generated Dec 8, 2017 7:45:03 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * SpUsers generated by hbm2java
 */
@Entity
@Table(name = "sp_users", catalog = "spring_security_poc", uniqueConstraints = {
		@UniqueConstraint(columnNames = "email"), @UniqueConstraint(columnNames = "mobile"),
		@UniqueConstraint(columnNames = "user_name") })
public class SpUsers implements java.io.Serializable {

	private Integer id;
	private String userName;
	private String firstName;
	private String middleName;
	private String lastName;
	private int mobile;
	private String email;
	private boolean isUserActive;
	private Date lastLoginAt;
	private String createdBy;
	private Date createdOn;
	private String updatedBy;
	private Date updatedOn;
	private Set<SpRoleMapping> spRoleMappings = new HashSet<SpRoleMapping>(0);
	private Set<SpOrganizationUsers> spOrganizationUserses = new HashSet<SpOrganizationUsers>(0);
	private Set<SpRoleMapping> spRoleMappings_1 = new HashSet<SpRoleMapping>(0);
	private Set<SpOrganizationUsers> spOrganizationUserses_1 = new HashSet<SpOrganizationUsers>(0);

	public SpUsers() {
	}

	public SpUsers(String userName, String firstName, String middleName, String lastName, int mobile, String email,
			boolean isUserActive) {
		this.userName = userName;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.mobile = mobile;
		this.email = email;
		this.isUserActive = isUserActive;
	}

	public SpUsers(String userName, String firstName, String middleName, String lastName, int mobile, String email,
			boolean isUserActive, Date lastLoginAt, String createdBy, Date createdOn, String updatedBy, Date updatedOn,
			Set<SpRoleMapping> spRoleMappings, Set<SpOrganizationUsers> spOrganizationUserses,
			Set<SpRoleMapping> spRoleMappings_1, Set<SpOrganizationUsers> spOrganizationUserses_1) {
		this.userName = userName;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.mobile = mobile;
		this.email = email;
		this.isUserActive = isUserActive;
		this.lastLoginAt = lastLoginAt;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.spRoleMappings = spRoleMappings;
		this.spOrganizationUserses = spOrganizationUserses;
		this.spRoleMappings_1 = spRoleMappings_1;
		this.spOrganizationUserses_1 = spOrganizationUserses_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "user_name", unique = true, nullable = false, length = 100)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "first_name", nullable = false, length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middle_name", nullable = false, length = 100)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "last_name", nullable = false, length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "mobile", unique = true, nullable = false)
	public int getMobile() {
		return this.mobile;
	}

	public void setMobile(int mobile) {
		this.mobile = mobile;
	}

	@Column(name = "email", unique = true, nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "is_user_active", nullable = false)
	public boolean isIsUserActive() {
		return this.isUserActive;
	}

	public void setIsUserActive(boolean isUserActive) {
		this.isUserActive = isUserActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login_at", length = 19)
	public Date getLastLoginAt() {
		return this.lastLoginAt;
	}

	public void setLastLoginAt(Date lastLoginAt) {
		this.lastLoginAt = lastLoginAt;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spUsers")
	public Set<SpRoleMapping> getSpRoleMappings() {
		return this.spRoleMappings;
	}

	public void setSpRoleMappings(Set<SpRoleMapping> spRoleMappings) {
		this.spRoleMappings = spRoleMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spUsers")
	public Set<SpOrganizationUsers> getSpOrganizationUserses() {
		return this.spOrganizationUserses;
	}

	public void setSpOrganizationUserses(Set<SpOrganizationUsers> spOrganizationUserses) {
		this.spOrganizationUserses = spOrganizationUserses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spUsers")
	public Set<SpRoleMapping> getSpRoleMappings_1() {
		return this.spRoleMappings_1;
	}

	public void setSpRoleMappings_1(Set<SpRoleMapping> spRoleMappings_1) {
		this.spRoleMappings_1 = spRoleMappings_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spUsers")
	public Set<SpOrganizationUsers> getSpOrganizationUserses_1() {
		return this.spOrganizationUserses_1;
	}

	public void setSpOrganizationUserses_1(Set<SpOrganizationUsers> spOrganizationUserses_1) {
		this.spOrganizationUserses_1 = spOrganizationUserses_1;
	}

}
