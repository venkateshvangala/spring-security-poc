package com.spring.security.poc.entity;
// Generated Dec 8, 2017 7:45:03 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * SpOrganization generated by hbm2java
 */
@Entity
@Table(name = "sp_organization", catalog = "spring_security_poc", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class SpOrganization implements java.io.Serializable {

	private Integer id;
	private String name;
	private String logo;
	private boolean isOrgActive;
	private String createdBy;
	private Date createdOn;
	private String updatedBy;
	private Date updatedOn;
	private Set<SpRoleMapping> spRoleMappings = new HashSet<SpRoleMapping>(0);
	private Set<SpRoleMapping> spRoleMappings_1 = new HashSet<SpRoleMapping>(0);
	private Set<SpOrganizationUsers> spOrganizationUserses = new HashSet<SpOrganizationUsers>(0);
	private Set<SpOrganizationUsers> spOrganizationUserses_1 = new HashSet<SpOrganizationUsers>(0);

	public SpOrganization() {
	}

	public SpOrganization(String name, boolean isOrgActive) {
		this.name = name;
		this.isOrgActive = isOrgActive;
	}

	public SpOrganization(String name, String logo, boolean isOrgActive, String createdBy, Date createdOn,
			String updatedBy, Date updatedOn, Set<SpRoleMapping> spRoleMappings, Set<SpRoleMapping> spRoleMappings_1,
			Set<SpOrganizationUsers> spOrganizationUserses, Set<SpOrganizationUsers> spOrganizationUserses_1) {
		this.name = name;
		this.logo = logo;
		this.isOrgActive = isOrgActive;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.updatedBy = updatedBy;
		this.updatedOn = updatedOn;
		this.spRoleMappings = spRoleMappings;
		this.spRoleMappings_1 = spRoleMappings_1;
		this.spOrganizationUserses = spOrganizationUserses;
		this.spOrganizationUserses_1 = spOrganizationUserses_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "logo", length = 1000)
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "is_org_active", nullable = false)
	public boolean isIsOrgActive() {
		return this.isOrgActive;
	}

	public void setIsOrgActive(boolean isOrgActive) {
		this.isOrgActive = isOrgActive;
	}

	@Column(name = "created_by", length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "updated_by", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spOrganization")
	public Set<SpRoleMapping> getSpRoleMappings() {
		return this.spRoleMappings;
	}

	public void setSpRoleMappings(Set<SpRoleMapping> spRoleMappings) {
		this.spRoleMappings = spRoleMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spOrganization")
	public Set<SpRoleMapping> getSpRoleMappings_1() {
		return this.spRoleMappings_1;
	}

	public void setSpRoleMappings_1(Set<SpRoleMapping> spRoleMappings_1) {
		this.spRoleMappings_1 = spRoleMappings_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spOrganization")
	public Set<SpOrganizationUsers> getSpOrganizationUserses() {
		return this.spOrganizationUserses;
	}

	public void setSpOrganizationUserses(Set<SpOrganizationUsers> spOrganizationUserses) {
		this.spOrganizationUserses = spOrganizationUserses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "spOrganization")
	public Set<SpOrganizationUsers> getSpOrganizationUserses_1() {
		return this.spOrganizationUserses_1;
	}

	public void setSpOrganizationUserses_1(Set<SpOrganizationUsers> spOrganizationUserses_1) {
		this.spOrganizationUserses_1 = spOrganizationUserses_1;
	}

}
